---
alias: "Kitchen Lights"
description: >-
  Automation to fully automate the lights in the kitchen.

  This automation looks huge... because it is :)

  - Turns off the lights when in away mode
  - Turns off the lights when in sleep mode

  - Handles a remote hanging in the kitchen, all buttons activate manual
    override mode causing no further automatic light changes until the off
    button is pressed.

    - On button: Turns on the lights
    - On button hold: Turns on lights: cooking scene
    - Dim up button: Dim up ~20%
    - Dim up button hold: Dim up ~10% per second until released
    - Dim down button: Dim down ~20%
    - Dim down button hold: Dim down ~10% per second until released
    - Off button: Turn off the lights, disable manual override
    - Off button hold: Turn off the lights, keep manual mode on

  - Manual mode is activated then lights are manually changed by the user
    or via HomeKit/Google Assistant. No further automatic light changes.

  - Manual override is automatically reset when away or sleep mode is activated,
    or at 4am in the morning before a new day starts.

  - Turn on the kitchen motion scene when motion sensor picks up, return to
    previous behavior once the area has cleared again

  - If not in eco mode, and are low light levels detected, activate the
    kitchen evening dim scene

  - In all other cases, turn of the lights

  - Automatically set the correct state when Home Assistant has restarted or
    the automations reload

id: "c8062eb7-2ea6-4cc0-af41-0a7d98c86c7e"
mode: queued
max_exceeded: silent
trace:
  stored_traces: 25

trigger:
  - platform: homeassistant
    event: start

  - platform: event
    event_type:
      - automations_reloaded
      - scene_reloaded

  - platform: state
    entity_id:
      - input_boolean.house_mode_away
      - input_boolean.house_mode_cleaning
      - input_boolean.house_mode_eco
      - input_boolean.house_mode_sleep
      - input_boolean.kitchen_variable_lights_manual_override
      - sensor.garden_luminosity
      - sensor.kitchen_luminosity
      - sensor.outside_luminosity

  - platform: state
    id: "lights"
    entity_id:
      - light.kitchen_ceiling
      - light.kitchen_cupboard

  - platform: state
    id: "remote"
    entity_id: sensor.kitchen_remote
    to:
      - "down-press"
      - "off-hold"
      - "off-press"
      - "on-hold"
      - "on-press"
      - "up-hold"
      - "up-press"

  - platform: state
    id: "motion"
    entity_id: binary_sensor.kitchen_motion
    from: "off"
    to: "on"

  - platform: state
    id: "clear"
    entity_id: binary_sensor.kitchen_motion
    from: "on"
    to: "off"
    for:
      seconds: 15

  - platform: time
    id: "reset"
    at: input_datetime.house_setting_reset

action:
  - choose:
      - alias: "Reset manual override before the new day starts"
        conditions:
          - alias: "When triggerd by the reset time"
            condition: trigger
            id: time

        sequence:
          - &manual_override_off
            alias: "Reset manual override on kitchen lights"
            service: input_boolean.turn_off
            target:
              entity_id: input_boolean.kitchen_variable_lights_manual_override

      - alias: "Activate cleaning mode"
        conditions:
          - alias: "When cleaning mode is on"
            condition: state
            entity_id: input_boolean.house_mode_cleaning
            state: "on"

        sequence:
          - *manual_override_off
          - alias: "Activate restroom cleaning scene"
            service: scene.turn_on
            target:
              entity_id: scene.kitchen_cleaning
            data:
              transition: 2.5

      - alias: "Turn off when sleep or away mode is active"
        conditions:
          - condition: or
            conditions:
              - alias: "When the house is in away mode"
                condition: state
                entity_id: input_boolean.house_mode_away
                state: "on"

              - alias: "When the house is in sleep mode"
                condition: state
                entity_id: input_boolean.house_mode_sleep
                state: "on"

        sequence:
          - *manual_override_off
          - &turn_off
            alias: "Turn off all the kitchen lights"
            service: light.turn_off
            target:
              area_id: kitchen
            data:
              transition: 5

      - alias: "The kitchen remote was used"
        conditions:
          - alias: "When triggered by the kitchen remote"
            condition: trigger
            id: "remote"

        sequence:
          - variables:
              action: "{{ trigger.to_state.state }}"

          - alias: "Handle kitchen remote button presses"
            choose:
              - alias: "Turn on button was pressed"
                conditions: "{{ action == 'on-press' }}"
                sequence:
                  - alias: "Activate default kitchen scene"
                    service: scene.turn_on
                    target:
                      entity_id: scene.kitchen_default
                    data:
                      transition: 1

                  - &manual_override_on
                    alias: "Set kitchen lights as manually overriden"
                    service: input_boolean.turn_on
                    target:
                      entity_id: input_boolean.kitchen_variable_lights_manual_override

              - alias: "Turn on button was pressed and hold"
                conditions: "{{ action == 'on-hold' }}"
                sequence:
                  - *manual_override_on
                  - alias: "Activate kitchen cooking scene"
                    service: scene.turn_on
                    target:
                      entity_id: scene.kitchen_cooking
                    data:
                      transition: 1

                  - alias: "Annouce cooking scene was activated"
                    service: tts.cloud_say
                    entity_id: media_player.kitchen_assistant
                    data:
                      message: "Kook modus geactiveerd"

              - alias: "Brightness up button was pressed"
                conditions: "{{ action in ['up-press', 'up-hold'] }}"
                sequence:
                  - *manual_override_on
                  - alias: "Determine brightness step to take"
                    variables:
                      step: "{{ 50 if action == 'up-press' else 25 }}"

                  - alias: "Turn up the brightness"
                    service: light.turn_on
                    target:
                      entity_id: light.kitchen_ceiling
                    data:
                      brightness_step: "{{ step }}"
                      transition: 1

                  - alias: "Check if kitchen ceiling now is really bright"
                    condition: numeric_state
                    entity_id: light.kitchen_ceiling
                    attribute: brightness
                    above: 100

                  - alias: "Turn on other lights as well"
                    service: light.turn_on
                    target:
                      entity_id:
                        - light.kitchen_cupboard

              - alias: "Brightness down button was pressed"
                conditions: "{{ action in ['down-press', 'down-hold'] }}"
                sequence:
                  - *manual_override_on
                  - alias: "Determine brightness step to take"
                    variables:
                      step: "{{ -50 if action == 'down-press' else -25 }}"

                  - alias: "Turn down the brightness"
                    service: light.turn_on
                    target:
                      entity_id: light.kitchen_ceiling
                    data:
                      brightness_step: "{{ step }}"
                      transition: 1

                  - alias: "Check if kitchen ceiling now is really dim"
                    condition: numeric_state
                    entity_id: light.kitchen_ceiling
                    attribute: brightness
                    below: 125

                  - alias: "Turn off the other lights"
                    service: light.turn_off
                    target:
                      entity_id:
                        - light.kitchen_cupboard

              - alias: "Turn off button was pressed"
                conditions: "{{ action == 'off-press' }}"
                sequence:
                  - *manual_override_off
                  - <<: *turn_off
                    data:
                      transition: 2.5

              - alias: "Turn off button was pressed and hold"
                conditions: "{{ action == 'off-hold' }}"
                sequence:
                  - *manual_override_on
                  - <<: *turn_off
                    data:
                      transition: 2.5

      - alias: "Ensure kitchen light are not manually overriden"
        conditions:
          - alias: "When manually overriden"
            condition: state
            entity_id: input_boolean.kitchen_variable_lights_manual_override
            state: "on"

        # Do nothing, beyond this point, because of the manual override
        sequence: []

      - alias: "Manual kitchen lights override detected"
        conditions:
          - alias: "One of the light has changed"
            condition: trigger
            id: "lights"

          - alias: "It was changed by a user"
            condition: template
            value_template: "{{ trigger.to_state.context.user_id != None }}"

        sequence:
          - *manual_override_on

      - alias: "Activate motion scene when motion is detected"
        conditions:
          - alias: "When triggered by motion detector"
            condition: trigger
            id: "motion"
          - &low_light
            alias: "When low light conditions"
            condition: or
            conditions:
              - alias: "Low light in the kitchen itself"
                condition: numeric_state
                entity_id: sensor.kitchen_luminosity
                below: 50
              - alias: "Low light from outside"
                condition: numeric_state
                entity_id: sensor.outside_luminosity
                below: 200
              - alias: "Low light from garden"
                condition: numeric_state
                entity_id: sensor.garden_luminosity
                below: 500

        sequence:
          - alias: "Activate kitchen motion scene"
            service: scene.turn_on
            target:
              entity_id: scene.kitchen_motion
            data:
              transition: 2.5

      - alias: "Activate evening dim scene on low light"
        conditions:
          - condition: state
            entity_id: input_boolean.house_mode_eco
            state: "off"
          - *low_light

        sequence:
          - alias: "Activate evening dim scene"
            service: scene.turn_on
            target:
              entity_id: scene.kitchen_evening_dim
            data:
              transition: 5

    default:
      - *turn_off
